* セルリスト
前回では、隣接リストを構築する際には $O(N^2)$ の単純な $ij$ ループを使用していた。
この部分をさらに高速化するため、セルリストという方法を紹介する。

** セルリストの概要

** 実装

** 結果

最後に、セルリストは粒子がある程度大きい場合でないと、高速化に繋がらないことを指摘したい。
冒頭の概念図で示したように、この手法は「接粒子探索を近傍のセルに限る」ということが高速化の鍵であった。
シミュレーションの箱一辺の長さがそもそも小さい場合は、上下左右のセルが系全体をカバーしてしまい、高速化にならない。
セルリストが高速化に寄与するかは、シミュレーションの箱全体の一辺の長さと、セルの一辺の長さ（相互作用距離から計算できる）から簡単に推測できる。
実装すべきかの判断はこの辺りの計算をしてみるしかないが、
- 3次元Lennard-Jones相互作用（カットオフ距離2.5、数密度1.2程度）なら1000粒子以上の場合
- 3次元の極短距離の相互作用の場合
  - Harmonic spheresやHertzian spheresのジャミング系
  - Swap Monte Carloでよく使われるpolydisperse系（カットオフ距離1.25）
- 2次元系なら大体なんでも（箱の一辺を長く取れるため）
ならば、セルリストを使った方が速い、という大体の感覚を私は持っている。
